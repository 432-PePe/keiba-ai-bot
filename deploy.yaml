name: Deploy to Cloud Run

on:
  push:
    branches: [ main ]

env:
  GCP_PROJECT_ID: racing-ai-system-12345
  GCP_REGION: us-central1
  SERVICE_NAME: keiba-ai-bot

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
- name: Install dependencies
  run: |
    python -m pip install --upgrade pip
    pip install Flask==2.3.3 line-bot-sdk==3.5.0 requests==2.31.0 aiohttp==3.8.6
    pip install beautifulsoup4==4.12.2 pandas==2.0.3 numpy==1.24.3
    pip install pytest pytest-asyncio
    
    - name: Run basic tests
      run: |
        echo "Testing Python syntax..."
        python -m py_compile app/main.py
        echo "Tests completed successfully"

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v1
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ env.GCP_PROJECT_ID }}
    
    - name: Configure Docker for GCR
      run: gcloud auth configure-docker
    
    - name: Build Docker image
      run: |
        docker build -t gcr.io/$GCP_PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA .
        docker tag gcr.io/$GCP_PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA gcr.io/$GCP_PROJECT_ID/$SERVICE_NAME:latest
    
    - name: Push Docker image
      run: |
        docker push gcr.io/$GCP_PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA
        docker push gcr.io/$GCP_PROJECT_ID/$SERVICE_NAME:latest
    
    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy $SERVICE_NAME \
          --image gcr.io/$GCP_PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA \
          --region $GCP_REGION \
          --platform managed \
          --allow-unauthenticated \
          --set-env-vars GCP_PROJECT_ID=$GCP_PROJECT_ID \
          --set-env-vars LINE_CHANNEL_ACCESS_TOKEN="${{ secrets.LINE_CHANNEL_ACCESS_TOKEN }}" \
          --set-env-vars LINE_CHANNEL_SECRET="${{ secrets.LINE_CHANNEL_SECRET }}" \
          --memory 2Gi \
          --cpu 2 \
          --max-instances 10 \
          --timeout 300
    
    - name: Get Cloud Run URL
      run: |
        SERVICE_URL=$(gcloud run services describe $SERVICE_NAME --region=$GCP_REGION --format='value(status.url)')
        echo "Service deployed at: $SERVICE_URL"
        echo "Update LINE webhook URL to: $SERVICE_URL/webhook"
